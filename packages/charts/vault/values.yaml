nameOverride: ""
fullnameOverride: ""
vault:
  size: 3
  image:
    repository: hashicorp/vault
    pullPolicy: IfNotPresent
    tag: "1.19.0"
  serviceAccount:
    create: true
    automount: true
    annotations: {}
    name: ""
  podAnnotations: {}
  annotations: {}
  podSecurityContext:
    fsGroup: 100
    runAsUser: 100
    runAsGroup: 100
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault
  securityContext:
    runAsGroup: 100
    runAsNonRoot: true
    runAsUser: 100
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: false
    runAsUser: 100
    runAsGroup: 100
    seccompProfile:
      type: RuntimeDefault
    capabilities:
      drop:
        - "ALL"
  service:
    type: ClusterIP
    ports: []
  ingress:
    enabled: true
    className: "cilium"
    annotations:
      ingress.cilium.io/tls-passthrough: enabled 
    hosts:
      - host: vault.localhost
        paths:
          - path: /
            pathType: Prefix
    tls:
    - hosts:
      - vault.localhost
      secretName: vault-tls
  resources:
    limits:
      memory: "512Mi"
      cpu: "200m"
    requests:
      memory: "256Mi"
      cpu: "100m"
  livenessProbe:
    httpGet:
      path: /v1/sys/health?standbyok=true
      port: api-port
    failureThreshold: 1
    periodSeconds: 60
    terminationGracePeriodSeconds: 60
  readinessProbe:
    httpGet:
      path: /v1/sys/health?standbyok=true
      port: api-port
    failureThreshold: 1
    periodSeconds: 60
  volumeClaimTemplates:
    - metadata:
        name: vault-raft
      spec:
        # https://kubernetes.io/docs/concepts/storage/persistent-volumes/#class-1
        # storageClassName: ""
        accessModes:
          - ReadWriteOnce
        volumeMode: Filesystem
        resources:
          requests:
            storage: 1Gi
  volumeMounts:
    - name: vault-raft
      mountPath: /vault/file
  nodeSelector: {}
  tolerations: []
  additionalEnv:
    - name: VAULT_LOG_LEVEL
      value: debug
    - name: SKIP_CHOWN
      value: "true"
    - name: SKIP_SETCAP
      value: "true"
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/name: vault
          topologyKey: kubernetes.io/hostname
  tls:
    certManager:
      enabled: true
      createIssuer: true
      namespace: cert-manager

      issuerRef: {}
      secretsOperator:
        createCertificate: true
        namespace: vault-secrets-operator
    existingSecret: ""
  config:
    storage:
      raft:
        path: "/vault/file"
    listener:
      tcp:
        address: "[::]:8200"
        tls_cert_file: /vault/tls/server.crt
        tls_key_file: /vault/tls/server.key
    api_addr: https://vault.default:8200
    cluster_addr: "https://${.Env.POD_NAME}:8201"
    disable_mlock: true
    ui: true
  externalConfig:
    policies:
      - name: allow_namespaced_secrets
        rules: |
          path "namespaces/data/{{identity.entity.aliases.${ accessor `kubernetes/` }.metadata.service_account_namespace}}/*" {
            capabilities = ["create", "read", "update", "delete", "list"]
          }
      - name: allow_shared_secrets
        rules: |
          path "shared/*" {
            capabilities = ["create", "read", "update", "delete", "list"]
          }
    auth:
      - type: kubernetes
        roles:
          # Allow every pod in the default namespace to use the secret kv store
          - name: default
            bound_service_account_names: ["default"]
            bound_service_account_namespaces: ["*"]
            policies: ["allow_shared_secrets", "allow_namespaced_secrets"]
            ttl: 1h
    secrets:
      - path: namespaces
        type: kv
        description: Kubernetes secrets.
        options:
          version: 2
      - path: shared
        type: kv
        description: Kubernetes shared secrets.
        options:
          version: 2
    startupSecrets:
      - type: kv
        path: namespaces/data/vso-example/helloworld
        data:
          data:
            username: testuser
            password: testpassword
configurer: {}
bankVaults:
  image:
    repository: ghcr.io/banzaicloud/bank-vaults
    pullPolicy: IfNotPresent
    tag: "1.19.0"
  resources:
    limits:
      memory: "512Mi"
      cpu: "200m"
    requests:
      memory: "256Mi"
      cpu: "100m"
fluentd:
  enabled: false
monitoring:
  enabled: false
statsd:
  enabled: false
velero:
  enabled: false
hsmDaemon: {}
prometheusExporter: {}
